# Считываем количество шариков
n = int(input())

# Считываем массив цветов шариков
massiv = [int(x) for x in input().split()]

# Инициализируем счетчик удалённых шариков
count = 0

# Инициализируем список для хранения цепочек шариков
# Каждый элемент списка — это список вида [цвет, количество подряд идущих шариков этого цвета]
check_out = []

# Проходим по каждому шарику в массиве
for i in range(n):
    # Текущий шарик
    ball = massiv[i]

    # Если список check_out не пуст и последний шарик в нём совпадает с текущим
    if check_out and check_out[-1][0] == ball:
        # Увеличиваем счетчик подряд идущих шариков этого цвета
        check_out[-1][1] += 1
    else:
        # Если шарик отличается, добавляем новую цепочку в check_out
        check_out.append([ball, 1])

    # Если длина текущей цепочки достигла 3 или больше
    if check_out[-1][1] >= 3:
        # Проверяем, можно ли удалить эту цепочку
        # Условие удаления: это последний шарик или следующий шарик отличается
        if i == n - 1 or massiv[i + 1] != ball:
            # Увеличиваем счетчик удалённых шариков на длину текущей цепочки
            count += check_out[-1][1]
            # Удаляем цепочку из check_out
            check_out.pop()
    print('Кол-во удалённых:', count)
    print('Чекер:', check_out)

# Выводим общее количество удалённых шариков
print(count)